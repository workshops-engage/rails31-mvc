.step.slide#ar-methods[data-x=x_succ data-y=0]
  q
    span AR 
    small métodos fundamentais

/ Creating

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby" style="font-size: 0.85em"]
        | # Criando com create
          House.create area: 350,
            price: 800_000,
            address: "Rua Liberdade, 553"

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby" style="font-size: 0.75em"]
        | # Criando com new
          house = House.new
          house.area = 350
          house.price = 800_000
          house.address = "Rua Liberdade, 553"
          house.save

/ Selecting

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | # Buscando tudo do banco
          House.all

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby" style="font-size:0.8em"]
        | # Condições
          House.where("area > 100").all
          House.where("area > ?", area).all
          House.where(area: area).all

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby" style="font-size:0.9em"]
        | # Ordenando
          House.order(:area).all
          House.order(:price).all
          House.order("price desc").all

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby" style="font-size:0.9em"]
        | # Limites e offsets
          House.limit(5).all
          House.limit(5).offset(5).all

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | # Juntando tudo...
          House.where("area > 100")
            .order("price desc")
            .limit(5)
            .all

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | # Buscando apenas um por id
          House.find(5)

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | # Buscando primeiro/último
          House.first
          House.last

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | # Buscando o 1o c/ filtros
          House.where("area > 100")
            .order("price desc")
            .first

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | # Buscando o último
          House.where("area > 100")
            .order("price desc")
            .last

/ Updating
.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby" style="font-size:0.85em"]
        | # Atualizando c/ save
          House.update_all(price: 10_000)

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby" style="font-size:0.85em"]
        | # Atualizando c/ save
          House.update(10, price: 10_000)

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | # Atualizando c/ save
          house = House.find(10)
          house.price = 10_000
          house.save

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby" style="font-size:0.8em"]
        | # Atualizando
          h = House.find(10)
          h.update_attribute :price, 10_000

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby" style="font-size:0.7em"]
        | # Atualizando
          h = House.find(10)
          h.update_attributes price: 10_000, 
                              area: 100

/ Deleting

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | # Hecatombe
          House.destroy_all

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | # Um
          House.destroy(10)

.step.slide.code[data-x=x_succ data-y=0]
  q
    pre
      code[class="ruby"]
        | # Excluir um
          house = House.find(10)
          house.destroy
